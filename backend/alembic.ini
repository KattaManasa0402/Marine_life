[alembic]
# A path to the alembic .py script to use.
# This is the only file that needs changing.
script_location = alembic

# The file encoding to use when generating new migration scripts.
# For example, "utf-8".
# If not specified, the system default encoding is used.
# output_encoding = utf-8

# The format for migration script filenames.
# Also used for the revision string in the migration script.
# See the Alembic documentation for more details.
# 'long' format is recommended for most use cases.
# revision_format = long

# The character set to use for generated migration files.
# This is passed to the 'encoding' argument of Python's open() function.
# If not specified, the system default encoding is used.
file_template = %%(rev)s_%%(slug)s

# --- FIX IS HERE ---
# This line was causing the ValueError. By commenting it out,
# Alembic will use the local system timezone, which is the default and safe behavior.
# timezone =
# --- END FIX ---

# The SQLAlchemy URL to connect to the database.
# This value is only used when the -x "db_url" command-line option is not present.
# It's overridden by our env.py script, but we set it here for completeness.
sqlalchemy.url = postgresql+psycopg2://marine_user:Password%%40123@localhost:5432/marine_db_v2 


[post_write_hooks]
# Post-write hooks are functions that are called after a migration script
# is generated. They can be used for things like code formatting.
# For example, to run 'black' on the generated script:
# hooks = black
# black.type = exec
# black.entrypoint = black
# black.options = -l 79 %(path)s


# Logging configuration
[loggers]
keys = root,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S